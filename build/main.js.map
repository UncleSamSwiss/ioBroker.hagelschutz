{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.6.5\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from \"@iobroker/adapter-core\";\n\n// Load your modules here, e.g.:\n// import * as fs from \"fs\";\n\nclass Hagelschutz extends utils.Adapter {\n    private checkInterval?: ioBroker.Interval;\n\n    public constructor(options: Partial<utils.AdapterOptions> = {}) {\n        super({\n            ...options,\n            name: \"hagelschutz\",\n        });\n        this.on(\"ready\", this.onReady.bind(this));\n        // this.on(\"objectChange\", this.onObjectChange.bind(this));\n        // this.on(\"message\", this.onMessage.bind(this));\n        this.on(\"unload\", this.onUnload.bind(this));\n    }\n\n    /**\n     * Is called when databases are connected and adapter received configuration.\n     */\n    private async onReady(): Promise<void> {\n        // Initialize your adapter here\n\n        // Reset the connection indicator during startup\n        this.setState(\"info.connection\", false, true);\n\n        // The adapters config (in the instance object everything under the attribute \"native\") is accessible via\n        // this.config:\n        this.log.info(\"config deviceID: \" + this.config.deviceID);\n        this.log.info(\"config hwtypeld: \" + this.config.hwtypeld);\n\n        this.checkInterval = this.setInterval(() => void this.checkHailStatus(), 120 * 1000); // Check every 2 minutes\n        void this.checkHailStatus();\n    }\n\n    /**\n     * Is called when adapter shuts down - callback has to be called under any circumstances!\n     */\n    private onUnload(callback: () => void): void {\n        try {\n            this.clearInterval(this.checkInterval);\n\n            callback();\n        } catch (e) {\n            callback();\n        }\n    }\n\n    private async checkHailStatus(): Promise<void> {\n        try {\n            this.log.debug(\"Checking hail status...\");\n            const response = await fetch(\n                `https://meteo.netitservices.com/api/v1/devices/${encodeURIComponent(this.config.deviceID)}/poll?hwtypeId=${encodeURIComponent(this.config.hwtypeld)}`,\n            );\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = (await response.json()) as { currentState: number };\n            if (data.currentState === undefined || typeof data.currentState !== \"number\") {\n                throw new Error(\n                    \"Invalid response format: currentState is missing or not a number: \" + JSON.stringify(data),\n                );\n            }\n\n            await this.setState(\"info.connection\", true, true);\n            await this.setState(\"currentState\", data.currentState, true);\n            this.log.debug(\"Hail status set to \" + data.currentState);\n        } catch (error) {\n            this.log.warn(\"Error checking hail status: \" + error);\n            await this.setState(\"info.connection\", false, true);\n        }\n    }\n}\n\nif (require.main !== module) {\n    // Export the constructor in compact mode\n    module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Hagelschutz(options);\n} else {\n    // otherwise start the instance directly\n    (() => new Hagelschutz())();\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAMA,YAAuB;AAKvB,MAAM,oBAAoB,MAAM,QAAQ;AAAA,EAC5B;AAAA,EAED,YAAY,UAAyC,CAAC,GAAG;AAC5D,UAAM;AAAA,MACF,GAAG;AAAA,MACH,MAAM;AAAA,IACV,CAAC;AACD,SAAK,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AAGxC,SAAK,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA,EAKA,MAAc,UAAyB;AAInC,SAAK,SAAS,mBAAmB,OAAO,IAAI;AAI5C,SAAK,IAAI,KAAK,sBAAsB,KAAK,OAAO,QAAQ;AACxD,SAAK,IAAI,KAAK,sBAAsB,KAAK,OAAO,QAAQ;AAExD,SAAK,gBAAgB,KAAK,YAAY,MAAM,KAAK,KAAK,gBAAgB,GAAG,MAAM,GAAI;AACnF,SAAK,KAAK,gBAAgB;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA,EAKQ,SAAS,UAA4B;AACzC,QAAI;AACA,WAAK,cAAc,KAAK,aAAa;AAErC,eAAS;AAAA,IACb,SAAS,GAAG;AACR,eAAS;AAAA,IACb;AAAA,EACJ;AAAA,EAEA,MAAc,kBAAiC;AAC3C,QAAI;AACA,WAAK,IAAI,MAAM,yBAAyB;AACxC,YAAM,WAAW,MAAM;AAAA,QACnB,kDAAkD,mBAAmB,KAAK,OAAO,QAAQ,CAAC,kBAAkB,mBAAmB,KAAK,OAAO,QAAQ,CAAC;AAAA,MACxJ;AACA,UAAI,CAAC,SAAS,IAAI;AACd,cAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,EAAE;AAAA,MAC5D;AACA,YAAM,OAAQ,MAAM,SAAS,KAAK;AAClC,UAAI,KAAK,iBAAiB,UAAa,OAAO,KAAK,iBAAiB,UAAU;AAC1E,cAAM,IAAI;AAAA,UACN,uEAAuE,KAAK,UAAU,IAAI;AAAA,QAC9F;AAAA,MACJ;AAEA,YAAM,KAAK,SAAS,mBAAmB,MAAM,IAAI;AACjD,YAAM,KAAK,SAAS,gBAAgB,KAAK,cAAc,IAAI;AAC3D,WAAK,IAAI,MAAM,wBAAwB,KAAK,YAAY;AAAA,IAC5D,SAAS,OAAO;AACZ,WAAK,IAAI,KAAK,iCAAiC,KAAK;AACpD,YAAM,KAAK,SAAS,mBAAmB,OAAO,IAAI;AAAA,IACtD;AAAA,EACJ;AACJ;AAEA,IAAI,QAAQ,SAAS,QAAQ;AAEzB,SAAO,UAAU,CAAC,YAAuD,IAAI,YAAY,OAAO;AACpG,OAAO;AAEH,GAAC,MAAM,IAAI,YAAY,GAAG;AAC9B;",
  "names": []
}
